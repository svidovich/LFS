Hello!

Devices can be recognized in two ways -- by path, and by id.
By path is which bus is used for the device; by id is the id which the device's ata_id or scsi_id programs reveal.
If you expect the physical path to the device to change, you should use 'by-id' mode. If you expect the device's id to change,
you should use 'by-path' mode.
You can see the values that the Udev scripts will use by running the command

	udevadm test /sys/block/<device>

By-id mode will use the ID_SERIAL value if it exists and is nonempty, otherwise a combination of ID_MODEL and ID_REVISION will
be used. 'by-path' will use the ID_PATH value.

Follow the instructions on page 232 to change the mode from its default behaviour. The rules and symlinks will be created for
you the first time you boot LFS. If you have multiple CD-ROM drives, you will may need to fix the symlinks.

It is possible that devices may be duplicated. For all classes of hardware besides network cards ( covered in 7.5 ) and sound
cards ( covered in BLFS ), creating Udev rules for custom, persistent symlinks will prevent broken reboot orders.
Devices that may have this issue include video cameras, bluetooth devices, and more.

For all of the devices for which this is likely to be a problem, you can find the corresponding directory under /sys/class or
/sys/block. For video devices, you may find them under /sys/class/video4linux/videoX.

In order to discover the properties of video devices for example you can run the command

	udevadm info -a -p /sys/class/video4linux/video0

Then write rules which create the symlinks:

cat > /etc/udev/rules.d/83-duplicate_devs.rules << "EOF"
KERNEL=="video*", ATTRS{idProduct}=="1910", ATTRS{idVendor}=="0d81", \
	SYMLINK+="webcam"
KERNEL=="video*", ATTRS{device}=="0x036f", ATTRS{vendor}=="0x109e", \
	SYMLINK+="tuner"
EOF

The result is that while /dev/video0 and /dev/video1 still refer randomly to two different devices and should not be used directly.
The symlinks, however, will always point to the correct devices.

