Hello!

Let's talk about the System V Bootscripts.

Linux uses a special boot utility named SysVinit based on a concept of run levels. It can be different from one system
to another, so it can't be assumed that because something worked on one distro that it will work in an LFS. LFS has
a specific way of doing things, while accepting most standards.

There are seven of these run levels.

0: Halt computer
1: Single user mode
2: Multi-user, no networking
3: Multi-user, networking
4: Customized, or same as 3
5: Same as 4, usually has GUI login
6: Reboot

Let's configure Sysvinit.
We need to configure inittab so that init can read it on kernel initialization. Configure /etc/inittab thus:

id:3:initdefault:
si::sysinit:/etc/rc.d/init.d/rc S
l0:0:wait:/etc/rc.d/init.d/rc 0
l1:S1:wait:/etc/rc.d/init.d/rc 1
l2:2:wait:/etc/rc.d/init.d/rc 2
l3:3:wait:/etc/rc.d/init.d/rc 3
l4:4:wait:/etc/rc.d/init.d/rc 4
l5:5:wait:/etc/rc.d/init.d/rc 5
l6:6:wait:/etc/rc.d/init.d/rc 6
ca:12345:ctrlaltdel:/sbin/shutdown -t1 -a -r now
su:S016:once:/sbin/sulogin
1:2345:respawn:/sbin/agetty --noclear tty1 9600
2:2345:respawn:/sbin/agetty tty2 9600
3:2345:respawn:/sbin/agetty tty3 9600
4:2345:respawn:/sbin/agetty tty4 9600
5:2345:respawn:/sbin/agetty tty5 9600
6:2345:respawn:/sbin/agetty tty6 9600

I have read the man page for inittab.
In accordance, I will be adding the following line to my inittab so that when I do ctrl-alt-del, the system shuts down:

ca::ctrlaltdel:/sbin/shutdown -t1 -h now

From LFS:
The initialization file instructs rc to run all the scripts starting with an S in /etc/rc.d/rcS.d followed by all the
scripts starting with an S in the /etc/rc.d/rc*.d directories.
rc also reads a library of functions in /lib/lsb/init-functions, and a configuration file in /etc/sysconfig/rc.site.
We can put any system configuration file params from the next sections heree so that everything is in one place.
The functions script also logs output to /run/var/bootlog, which is impermanent; it is also appended to /var/log/boot.log.

--

We need to be able to change run levels. This is done with init <runlevel>. 
To reboot the computer, a user could issue init 6, which is an alias for reboot. init 0 is an alias for halt.

The directories in /etc/rc.d contain a number of symbolic links. Some begin with S, others with K; S means start and K 
means kill. They are executed in the order of the numbers. The real scripts for all of this are in /etc/rc.d/init.d; 
the scripts can be called with many parameters like start, stop, restart, reload and status. When a K link is encountered,
the correct script is run with the start arg. The exception here is that links starting with S in rc0.d and rc6.d won't
cause starts, but stops. This is because when a user is rebooting or halting a system, nothing will be started, only stopped.

start
	> It starts
stop
	> It stops
restart
	> It stops, then starts
reload
	> The configuration is updated
status
	> Is the service running? On which PID?

We can modify the boot process if desired.

UDEV Bootscript in /etc/rc.d/init.d/udev starts udevd, and triggers any devices created by the kernel already, waiting
for rules to complete. The script unsets uevent handler from /sbin/hotplug, since the kernel doesn't need to call out
to a binary.
/etc/rc.d/init.d/udev_retry retriggers events for subsystems whose rules might depend on filesystems not mounted until
mountfs is run. To find the subsystem of a device, use udevadm info --atribute-walk <device>, where device is a path
in /dev or /sys.

To set the system clock, the setclock script is used, which reads the time from the hardware clock. setclock is run
via udev when the kernel detects the hardware capability on boot. It can be run manually with the stop parameter to
store the system time to the CMOS clock.

I used the command hwclock --localtime --show and it displayed UTC time. If it were, I would have to configure /etc/sysconfig/clock,

Next, let's learn about configuring the linux console!
We will be configuring the console bootscript that sets the keyboard map. Without the config file, the console script
does nothing.

/etc/sysconfig/console contains lines like VARIABLE="value". Let's looks at the variables we can use:

LOGLEVEL: This veriable specifies the log level for kernel messages sent to the console, from 1-8, defaulting at 7.
KEYMAP: This specifies args for loadkeys, usually the name of a keymap to load. If nothing is set here, the default
kernel map loads. In lfs, our keymaps are as follows: amiga, atari, i386, mac, ppc, sun. Each of these contains several folders.

KEYMAP_CORRECTIONS: This is rarely used; it can be used to modify keys.

FONT: This specifies arguments for the setfont program. 

UNICODE: Set this to 1, yes, or true. This is harmful unless you are in a UTF locale.

LEGACY_CHARSET: There is no stock Unicode keymap for many layouts; the console bootscript will convert available maps to UTF on the fly.


Let's set up our file:

KEYMAP="pl2"
FONT="lat2a-16 -m 8859-2"
LOGLEVEL="8"

Now, keep in mind that this has nothing to do with setting up a keyboard layout for X Windows, ssh, etc.
