= 6.10: Toolchain Adjustments =

We need to adjust the toolchain so that it links newly compiled programs against the C libraries.

Back up the /tools linker and replace it with the adjusted linker from chapter 5.

mv -v /tools/bin/{ld,ld-old}
mv -v /tools/$(uname -m)-pc-linux-gnu/bin/{ld,ld-old}
mv -v /tools/bin/{ld-new,ld}
ln -sv /tools/bin/ld /tools/$(uname -m)-pc-linux-gnu/bin/ld

Now we ammend GCC specs file so it points to the new dynamic linker.

gcc -dumpspecs | sed -e 's@/tools@@g' \
-e '/\*startfile_prefix_spec:/{n;s@.*@/usr/lib/ @}' \
-e '/\*cpp:/{n;s@$@ -isystem /usr/include@}' > \
`dirname $(gcc --print-libgcc-file-name)`/specs

We do a sanity check.
echo 'int main(){}' > dummy.c
cc dummy.c -v -Wl,--verbose &> dummy.log
readelf -l a.out | grep ': /lib'

It works c:

Are we set up to use the right start files?
grep -o '/usr/lib.*/crt[1in].*succeeded' dummy.log

yes c:

Are we looking for the right headers?
grep -B1 '^ /usr/include' dummy.log

Yes!

Is the new linker being used with the right search paths?

grep 'SEARCH.*/usr/lib' dummy.log |sed 's|; |\n|g'

YES!!

Are we using the right libc?

Oh YEAH!!!

Is gcc using the right dynamic linker???

grep found dummy.log

OH YEAHHHHH! YEAH BABY!


Clean up time :3

rm -v dummy.c a.out dummy.log

Next time... we install real packages :3

Welcome back!

= 6.11: zlib =
This has compression and decompression routines.

./configure --prefix=/usr

make
make check
make install

Now, the shared lib needs to be moved to /lib, so .so in /usr/lib needs recreated.

mv -v /usr/lib/libz.so.* /lib
ln -sfv ../../lib/$(readlink /usr/lib/libz.so) /usr/lib/libz.so
Done!

= 6.12: File =
This contains utils for telling what type of file a file is.

Contains libmagic.

./configure --prefix=/usr
make
make check
make install

Done!

= 6.13: Readline =

This allows command-line editing and history capabilities.
Reinstalling this will cause old libs to be moved to libname.old. 
Normally this isn't an issue... but it may causea a linking bug in ldconfig. Avoid this by issuing some seds.

sed -i '/MV.*old/d' Makefile.in
sed -i '/{OLDSUFF}/c:' support/shlib-install

Next, let's configure.
./configure --prefix=/usr --disable-static --docdir=/usr/share/doc/readline-7.0

Next, compile the package, forcing readline to link against the libncursesw library:

make SHLIB_LIBS="-L/tools/lib -lncursesw"
Install the package:
make SHLIB_LIBS="-L/tools/lib -lncursesw" install

I THINK the fact that it says 'you may need to run ldconfig' is okay. It does not seem to be and error.

Next, let's move the dynamic libraries, and fix permissions, and do some symlinks.

mv -v /usr/lib/lib{readline,history}.so.* /lib
chmod -v u+w /lib/lib{readline,history}.so.*
ln -sfv ../../lib/$(readlink /usr/lib/libreadline.so) /usr/lib/libreadline.so
ln -sfv ../../lib/$(readlink /usr/lib/libhistory.so ) /usr/lib/libhistory.so

Install the documentation, dick.

install -v -m644 doc/*.{ps,pdf,html,dvi} /usr/share/doc/readline-7.0


Done!


= 6.14: M4 =

We need to make some changes, thanks to glibc.
sed -i 's/IO_ftrylockfile/IO_EOF_SEEN/' lib/*.c
echo "#define _IO_IN_BACKUP 0x100" >> lib/stdio-impl.h

Good. now,

./configure --prefix=/usr
make
make check
make install

m4 copies given files while expanding the macros they contain. It also has built in functions for including
named files, running unix commands, and more. This can be used as a front end to a compiler as desired.


= 6.15: bc =

This has an arbitrary precision numeric processing language.

We need to make it so that it uses sed instead of ed.
Wow.

cat > bc/fix-libmath_h << "EOF"
#! /bin/bash
sed -e '1 s/^/{"/' \
	-e 's/$/",/' \
	-e '2,$ s/^/"/' \
	-e '$ d' \
	-i libmath.h
sed -e '$ s/$/0}/' \
	-i libmath.h
EOF

Create temporary symlinks so that the package can find and confirm readline's libncurses.

ln -sv /tools/lib/libncursesw.so.6 /usr/lib/libncursesw.so.6

ln -sfv libncurses.so.6 /usr/lib/libncurses.so

There is an issue in configure. There were missing files early on. Let's fix it:
sed -i -e '/flex/s/as_fn_error/: ;; # &/' configure

Now configure thus:

./configure --prefix=/usr --with-readline --mandir=/usr/share/man --infodir=/usr/share/info

make

To check, you can do

echo "quit" | ./bc/bc -l Test/checklib.b > result.out

No failures. Let's

make install

Now we have
bc a command line calculator
dc a reverse-polish command line calculator
lmao what

anyway, done!
