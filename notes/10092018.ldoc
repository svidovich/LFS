Hello friends!

Some tips:

If you get [ no tty available ... etc ]
Try restarting your machine.

If you get [ /mnt/lfs/dev/pts ], it is because you didn't run

mount -v --bind /dev /mnt/lfs/dev 

before you tried mounting devpts.

I have added scripts for the restart process. They are run in this order:

1. mount
2. VKFS
3. chroot

Good! Let's move on.

= 6.25 ATTR =

This contains utilities to administer attributes on filesystem objects. ( lolwhat? )

Let's configure:

./configure --prefix=/usr --bindir=/bin --disable-static --sysconfdir=/etc --docdir=/usr/share/doc/attr-2.4.48

Now,

make
make check
make install

Nice! The shared library must be moved to lib. Then, recreate the so file in /usr/lib.

	mv -v /usr/lib/libattr.so.* /lib
	ln -sfv ../../lib/$(readlink /usr/lib/libattr.so) /usr/lib/libattr.so

Done!

= 6.26: ACL =

This lets us administer access control lists. It is probably very important.

Let's configure:

./configure --prefix=/usr --bindir=/bin --disable-static --libexecdir=/usr/lib --libexecdir=/usr/lib --docdir=/usr/share/doc/acl-2.2.53

If you get an error in regards to not having an extended attributes library, try 

	rm -rvf /usr/lib/libattr*
	rm -rvf /lib/libattr*

and then building attr over again.

Next,
make
make install
Like in attr, we need to move shared libraries and make symlinks

	mv -v /usr/lib/libacl.so.* /lib
	ln -sfv ../../lib/$(readlink /usr/lib/libacl.so) /usr/lib/libacl.so

Done

= 6.27: Libcap =

Lol what the fuck

This package implements user-space interfaces to POSIX capabilities available in linux kernels
It helps partition root privelege into different sets.

prevent a static library from being installed:

sed -i '/install*STALIBNAME/d' libcap/Makefile

Next,

make

When installing, stop it from using setcap on itself.
Also, prevent it from using lib64; instead use lib.

make RAISE_SETFCAP=no lib=lib prefix=/usr install
Then,
chmod -v 755 /usr/lib/libcap.so

Like the previous two, move the shared libraries:
mv -v /usr/lib/libcap.so.* /lib
ln -sfv ../../lib/$(readlink /usr/lib/libcap.so) /usr/lib/libcap.so

Done!

= 6.28: Sed =

Sed is a stream editor. No one knows what it does.

First, use sed to modify sed by fixing our broken shit:

sed -i 's/usr/tools' build-aux/help2man
sed -i 's/testsuite.panic-tests.sh//' Makefile.in

Prepare to compile:

./configure --prefix=/usr --bindir=/bin

Next,

make
make html
make check

Install and build documentation.

make install
install -d -m755 /usr/share/doc/sed-4.5
install -m644 doc/sed.html /usr/share/doc/sed-4.5


Done!

There are 77 packages.
This is #29.

= 29: psmisc =

Configure:
./configure --prefix=/usr

If you get an error that talks about not being able to find ncurses, redo the following in the ncurses folder:

mv -v /usr/lib/libncursesw.so.6* /lib
ln -sfv ../../lib/$(readlink /usr/lib/libncursesw.so) 
/usr/lib/libncursesw.so
for lib in ncurses form panel menu ; do
     rm -vf                    /usr/lib/lib${lib}.so
     echo "INPUT(-l${lib}w)" > /usr/lib/lib${lib}.so
     ln -sfv ${lib}w.pc        /usr/lib/pkgconfig/${lib}.pc
done
rm -vf                     /usr/lib/libcursesw.so
echo "INPUT(-lncursesw)" > /usr/lib/libcursesw.so
ln -sfv libncurses.so      /usr/lib/libcurses.so

make
make install

Move killall and fuser to FHS standard locations:

mv -v /usr/bin/fuser /bin
mv -v /usr/bin/killall /bin

Done!

= 6.30: Iana-Etc =
This provides data for network services.
This one is easy.

make
make install

Done!

= 6.31: Bison =

This has a parser generator.

Configure:

./configure --prefix=/usr --docdir=/usr/share/doc/bison-3.0.5
make
make install

Done!

= 6.32: flex =

This has a utility for generating programs that recognize patterns in text... wow!

Fix an issue thanks to glibc:

sed -i "/math.h/a #include <malloc.h>" src/flexdef.h

Skip using help2man:

HELP2MAN=/tools/bin/true ./configure --prefix=/usr --docdir=/usr/share/doc/flex-2.6.4

Now,

make
make check
make install

Flex had a predecessor called lex. Some people don't know about it.

So, make a symlink!

ln -sv flex /usr/bin/lex

Done!

That's all for tonight! See you tomorrow!
