We are moving on to chapter 4 today. We have all of the packages... around.
We are going to create a directory for temporary tools, and add a user! We will
construct an environment for the use to play in.

In order to create the temp directory, run these as root:

	mkdir -v $LFS/tools
	ln -sv $LFS/tools /

This symlink makes it so our toolchain is compiled so that it always refers to /tools. Thus
when we decouple the OS, things will still work.

Next we are going to add a user. We can then build packages safely without ruining anything.
Due to lack of creativity, we will call the user, as well as the group it belongs to, lfs.

	sudo -i
	groupadd lfs
	useradd -s /bin/bash -g lfs -m -k /dev/null lfs
	exit

The book goes over these options:

-g lfs
add user lfs to group lfs

-m
creates a home directory for lfs

-s /bin/bash
makes bash lfs' default shell

-k /dev/null
Prevent the copying of files from the skeleton directory by changing
the input location to the null device.

To log into the new user, give it a password.

passwd lfs

and give lfs access to $LFS/tools:
chown -v lfs $LFS/tools
chown -v lf $LFS/sources

you can log in as lfs by saying
su - lfs


Next let's set up lfs with some deets!
We will add some stuff for bash. As lfs@computer, do

cat > ~/.bash_profile << "EOF"
exec env -i HOME=$HOME TERM=$TERM PS1='\u:\w\$ ' /bin/bash
EOF

This will log lfs in with HOME, TERM and PS1, so environment variables from the outer system don't leak in!
We can also set up a bash wreck if we like.

set +h
umask 022
LFS=/mnt/lfs
LC_ALL=POSIX
LFS_TGT=$(uname -m)-lfs-linux-gnu
PATH+/tools/bin:/bin:/usr/bin
export LFS LC_ALL LFS_TGT PATH

see p31.
To apply the changes, you can do source ~/.bash_profile.
